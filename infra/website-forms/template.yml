AWSTemplateFormatVersion: 2010-09-09
Description: Assets to receive and transmit Website Form Submissions

Parameters:
  DeploymentBucket:
    Type: String
    Description: S3 bucket name for deployment assets.
  LambdaFunctionPackageKey:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the SSM Parameter containing the Lambda function package S3 key.
  # SenderEmail:
  #   Type: String
  #   Description: Verified SES email address (e.g. no-reply@yourdomain.com)
  # TagCompanyCode:
  #   Default: "BCF"
  #   Description: Value to use for the Company-Code tag.
  #   Type: String
  # TagCostCenter:
  #   Default: "tbd"
  #   Description: Value to use for the Cost-Center tag.
  #   Type: String
  TagEnv:
    AllowedValues:
      - dev
      - stage
      - prod
    Description: Standard Environment name.
    Type: String
  TagService:
    Default: website-forms
    Description: Value to use for the Service tag.
    Type: String
  TagOwner:
    Description: Name of the owner of this component.
    Type: String
  TagOwnerEmail:
    Description: Email of the owner of this component.
    Type: String
  TagVersion:
    Description: Value to use for the Version tag, using a "major.minor" notation.
    Type: String

# Conditions:
#   DeployApiFrontend: !Not [!Equals [!Ref TagEnv, prod]]

Resources:
  IamCore:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        # Env: !Ref TagEnv
        NamePrefix: !Ref TagService
        LambdaRegistrationFunctionName: !Sub "${TagService}-RegistrationLambda"
        SNSTopicName: !Sub "${TagService}-RegistrationTopic"
        # TagCostCenter: !Ref TagCostCenter
        # TagOwner: !Ref TagOwner
        # TagOwnerEmail: !Ref TagOwnerEmail
        # Version: !Ref TagVersion
      Tags:
        - Key: env
          Value: !Ref TagEnv
        - Key: Name
          Value: !Sub "${TagService}-stack"
        - Key: "owner-name"
          Value: !Ref TagOwner
        - Key: "owner-email"
          Value: !Ref TagOwnerEmail
        # - Key: service
        #   Value: !Ref TagService
        - Key: version
          Value: !Ref TagVersion
      TemplateURL: ./resource-templates/template-iamcore.yml

  RegistrationAction:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        DeploymentBucket: !Ref DeploymentBucket
        # Env: !Ref TagEnv
        LambdaFunctionPackageKey: !Ref LambdaFunctionPackageKey
        LambdaRegistrationFunctionName: !Sub "${TagService}-RegistrationLambda"
        LambdaRegistrationExecutionRoleName: !GetAtt IamCore.Outputs.LambdaRegistrationExecutionRoleName
        NamePrefix: !Ref TagService
        SNSTopicName: !Sub "${TagService}-RegistrationTopic"
        # SenderEmail: !Ref SenderEmail
        # TagCostCenter: !Ref TagCostCenter
        # TagOwner: !Ref TagOwner
        # TagOwnerEmail: !Ref TagOwnerEmail
        # Version: !Ref TagVersion
      Tags:
        - Key: env
          Value: !Ref TagEnv
        - Key: Name
          Value: !Sub "${TagService}-RegistrationAction"
        - Key: "owner-name"
          Value: !Ref TagOwner
        - Key: "owner-email"
          Value: !Ref TagOwnerEmail
        # - Key: service
        #   Value: !Ref TagService
        - Key: version
          Value: !Ref TagVersion
      TemplateURL: ./resource-templates/template-registration-action.yml

  ApiFrontend:
    Type: AWS::CloudFormation::Stack
    # Condition: DeployApiFrontend
    Properties:
      Parameters:
        Env: !Ref TagEnv
        NamePrefix: !Ref TagService
        ApiGatewayExecutionRoleArn: !GetAtt IamCore.Outputs.ApiGatewayInvokeEndpointExecutionRoleArn
        ApiGatewayName: !Sub "${TagService}-RegistrationApi"
        LambdaFunctionArn: !GetAtt RegistrationAction.Outputs.LambdaFunctionArn
        ApiGatewayLogGroup: !GetAtt IamCore.Outputs.ApiGatewayLogGroupArn
        ApiGatewayLoggingLevel: INFO
        ApiGatewayMetricsEnabled: true
        ApiStageName: v1
        ApiMethodName: register
        # WAFWebACL: !Ref WAFWebACL
      Tags:
        - Key: env
          Value: !Ref TagEnv
        - Key: Name
          Value: !Sub "${TagService}-ApiFrontend"
        - Key: "owner-name"
          Value: !Ref TagOwner
        - Key: "owner-email"
          Value: !Ref TagOwnerEmail
        # - Key: service
        #   Value: !Ref TagService
        - Key: version
          Value: !Ref TagVersion
      TemplateURL: ./resource-templates/template-apigw.yml

Outputs:
  ApiEndpoint:
    Description: "POST endpoint for registrations"
    Value: !GetAtt ApiFrontend.Outputs.apiGatewayInvokeURL