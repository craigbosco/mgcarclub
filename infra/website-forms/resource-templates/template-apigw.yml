AWSTemplateFormatVersion: 2010-09-09
Description: API Gateway in Public Internet mode

Parameters:
  Env:
    Type: String
    Description: Environment
  NamePrefix:
    Type: String
    Description: Name prefix for all resources
  LambdaFunctionArn: 
    Type: String
    Description: Lambda function ARN to invoke
  ApiGatewayExecutionRoleArn:
    Type: String
    Description: API Gateway execution role ARN
  ApiGatewayName:
    Description: Api Gateway name.
    Type: String
    Default: "PredictionGateway"
  ApiGatewayLogGroup:
    Description: Api Gateway log group name.
    Type: String
  ApiGatewayLoggingLevel:
    Description: Api Gateway logging level.
    Type: String
  ApiGatewayMetricsEnabled:
    Description: Api Gateway metrics enabled.
    Type: String
  ApiStageName:
    Type: "String"
    Description: API Staging Name.
    Default: "v1"
  ApiMethodName:
    Type: String
    Description: API method.
    Default: "register"
  # WAFWebACL:
  #   Type: String
  #   Description: WAF Web ACL ARN

Resources:
  # API Gateway Account Configuration for CloudWatch Logs
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !Ref ApiGatewayExecutionRoleArn

  # API Gateway
  ApiGatewayRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub ${NamePrefix}-${ApiGatewayName}
      Description: API to POST the registration
      ApiKeySourceType: HEADER
      MinimumCompressionSize: 0
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: Name
          Value: !Sub "${NamePrefix}-${Env}-APIGateway"

  ProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ApiGatewayRestApi
      ParentId: !GetAtt ApiGatewayRestApi.RootResourceId
      PathPart: !Ref ApiMethodName

  ProxyResourceANY:
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref ProxyResource
      RestApiId: !Ref ApiGatewayRestApi
      AuthorizationType: NONE
      HttpMethod: POST
      ApiKeyRequired: true
      OperationName: !Ref ApiMethodName
      MethodResponses:
        - StatusCode: "200"
          ResponseModels: { "application/json": "Empty" }
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS
        # Uri: !Ref LambdaFunctionArn
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
        Credentials: !Ref ApiGatewayExecutionRoleArn
        PassthroughBehavior: WHEN_NO_MATCH
        IntegrationResponses:
          - StatusCode: "200"

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ProxyResourceANY
    Properties:
      Description: API Deployment
      RestApiId: !Ref ApiGatewayRestApi

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      AccessLogSetting:
        DestinationArn: !Ref ApiGatewayLogGroup
        Format: "$context.identity.sourceIp,$context.identity.caller,$context.identity.user,$context.requestTime,$context.httpMethod,$context.resourcePath,$context.protocol,$context.status,$context.responseLength,$context.requestId"
      DeploymentId: !Ref ApiGatewayDeployment
      Description: API Stage v1
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          LoggingLevel: !Ref ApiGatewayLoggingLevel
          MetricsEnabled: !Ref ApiGatewayMetricsEnabled
      RestApiId: !Ref ApiGatewayRestApi
      StageName: !Ref ApiStageName
      TracingEnabled: true

  # ApiGatewayWAFAssociation:
  #   Type: AWS::WAFv2::WebACLAssociation
  #   Properties:
  #     # Resource expects:  arn:partition:apigateway:region::/restapis/api-id/stages/stage-name
  #     ResourceArn: !Sub arn:aws:apigateway:${AWS::Region}::/restapis/${ApiGatewayRestApi}/stages/${ApiGatewayStage}
  #     WebACLArn: !Ref WAFWebACL

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Join ["", [{"Ref": "AWS::StackName"}, "-apikey"]]
      Description: !Join ["", [{"Ref": "AWS::StackName"}, "api key"]]
      Enabled: true

  ApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    DependsOn: ApiGatewayStage
    Properties:
      ApiStages:
      - ApiId: !Ref ApiGatewayRestApi
        Stage: !Ref ApiStageName
      Description: !Join [" ", [{"Ref": "AWS::StackName"}, "usage plan"]]
      UsagePlanName: !Join ["", [{"Ref": "AWS::StackName"}, "-usage-plan"]]

  ApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

Outputs:
  apiGatewayInvokeURL:
    Value: !Sub https://${ApiGatewayRestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStageName}/${ApiMethodName}
